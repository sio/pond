.DEFAULT_GOAL=run-secretd


# https://www.arp242.net/static-go.html
GOBUILD_ARGS+=-tags netgo,osusergo,sqlite_omit_load_extension -ldflags="-extldflags=-static -s -w"


# Fail if C compiler is not available (required for sqlite)
export CGO_ENABLED=1


$(EXE): $(shell find . -type f -iname '*.sql')


.PHONY: test-cli
test-cli: GOTEST_ARGS+=--tags=test_cli
test-cli: build
	$(GO) test ./tests/cli -timeout $(GOTEST_TIMEOUT) $(GOTEST_ARGS)


.PHONY: test-docs
test-docs: GOTEST_ARGS+=--tags=docs --count=1
test-docs: build
	$(GO) test ./tests/help -timeout $(GOTEST_TIMEOUT) $(GOTEST_ARGS)
	git diff --exit-code -- docs/


.PHONY: ci
ci: lint test test-cli test-docs


.PHONY: review-crypto-algorithms
review-crypto-algorithms:
	@git grep 'golang.org/x/crypto'|grep -v path_algo_test.go|grep -vE '^go\.'|grep -v 'crypto/ssh'|column -t


.PHONY: git-config
git-config:
	git config --local diff.ssh-certificate.textconv "ssh-keygen -Lf"
	git config --local diff.ssh-certificate.cachetextconv true


test: tests/repo
tests/repo:
	$(MAKE) test-repo SECRETS_DIR=$(abspath $@)


.PHONY: test-repo
test-repo: AGENT_SOCKET=$(abspath tests/agent.socket)
test-repo: SECRETS_DIR=$(abspath tests/repo)
test-repo:  ## Regenerate tests/repo used in end-to-end tests
	$(RM) -r tests/repo  # intentionally not via variable to avoid unexpected data loss
	mkdir -p $(SECRETS_DIR)
	-$(RM) $(AGENT_SOCKET)
	@export SECRETS_DIR=$(SECRETS_DIR) SSH_AUTH_SOCK=$(AGENT_SOCKET) && \
	eval `ssh-agent -a $(AGENT_SOCKET)` && \
	$(MAKE) test-repo-prepare && \
	ssh-agent -k
	@echo 'This directory is generated by `make test-repo` from pond/secrets' > $(SECRETS_DIR)/README
	-$(RM) $(AGENT_SOCKET)


.PHONY: test-repo-prepare
test-repo-prepare: SECRETCTL=bin/secretctl$(BIN_SUFFIX)
test-repo-prepare: build
	chmod go-rwx tests/keys/*
	ssh-add tests/keys/master tests/keys/alice tests/keys/bob
	$(SECRETCTL) init tests/keys/master.pub
	$(SECRETCTL) cert --admin=alice --key=tests/keys/alice.pub -rw / /users/alice
	$(SECRETCTL) cert --user=bob --key=tests/keys/bob.pub -rw /users
	$(SECRETCTL) set /users/domain users.domain.tld
	$(SECRETCTL) set /domain top.domain.tld
	$(SECRETCTL) set /foo foo-value
	$(SECRETCTL) set /users/bar bar-value


.PHONY: test-server
test-server: tests/repo  ## Serve test repo on loopback interface
	@eval `ssh-agent` && \
	chmod go-rwx tests/keys/master && \
	ssh-add tests/keys/master && \
	export SECRETS_DIR=$< && \
	$(MAKE) run-secretd ; \
	STATUS=$$? ;\
	ssh-agent -k ; \
	exit $$STATUS


.PHONY: bench-stress
bench-stress: SECRETD_BENCH_SERVER?=tcp://localhost:20002
bench-stress: SECRETD_BENCH_CLIENT_KEY?=$(abspath tests/keys/bob)
bench-stress: SECRETD_BENCH_QUERY?=foo,bar
bench-stress: GOBENCH_COUNT?=1
bench-stress: GOBENCH_TIME?=10s
bench-stress:  ## Execute a stress test benchmark
	$(GO) test ./tests/stress -bench=. -benchmem -benchtime=$(GOBENCH_TIME) -count=$(GOBENCH_COUNT) -timeout=0 $(GOTEST_ARGS)
export SECRETD_BENCH_SERVER
export SECRETD_BENCH_CLIENT_KEY
export SECRETD_BENCH_QUERY


include ../Makefile.golang
